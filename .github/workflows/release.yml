name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Go for use with actions
        uses: actions/setup-go@v1.0.0
        with:
          version: "1.14"
      - name: Set GOPATH
        run: echo "::set-env name=GOPATH::$(go env GOPATH)"
      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF/refs\/tags\//}
      - name: Build Linux binary
        run: |
          tmpdir="$(mktemp -d)"
          cd "$tmpdir"
          curl -sSL https://github.com/fluxcd/flux/archive/1.17.1.tar.gz | tar xz
          mv flux-1.17.1/deploy "$GITHUB_WORKSPACE"/kustomize/static/flux/flux-deploy
          curl -sSL https://github.com/fluxcd/helm-operator/archive/v1.0.0-rc8.tar.gz | tar xz
          mv helm-operator-1.0.0-rc8/deploy "$GITHUB_WORKSPACE"/kustomize/static/flux/helm-operator-deploy
          curl -sSL -o "$GITHUB_WORKSPACE"/kustomize/static/hcloud-csi/hcloud-csi.yaml https://raw.githubusercontent.com/hetznercloud/csi-driver/v1.2.2/deploy/kubernetes/hcloud-csi.yml
          curl -sSL -o "$GITHUB_WORKSPACE"/kustomize/static/hcloud-fip/rbac.yaml https://raw.githubusercontent.com/cbeneke/hcloud-fip-controller/v0.3.1/deploy/rbac.yaml
          curl -sSL -o "$GITHUB_WORKSPACE"/kustomize/static/hcloud-fip/daemonset.yaml https://raw.githubusercontent.com/cbeneke/hcloud-fip-controller/v0.3.1/deploy/daemonset.yaml
          curl -sSL -o "$GITHUB_WORKSPACE"/kustomize/static/sealed-secrets/controller.yaml https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.9.7/controller.yaml

          cd "$GITHUB_WORKSPACE"
          export PATH="${{ env.GOPATH }}/bin:$PATH"
          go get github.com/markbates/pkger/cmd/pkger
          pkger
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-d -s -w" -tags netgo -installsuffix netgo -o hcloud-k3os-configurator_${{ steps.get_version.outputs.version }}_amd64 .
          xz hcloud-k3os-configurator_${{ steps.get_version.outputs.version }}_amd64
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hcloud-k3os-configurator_${{ steps.get_version.outputs.version }}_amd64.xz
          asset_name: hcloud-k3os-configurator_${{ steps.get_version.outputs.version }}_amd64.xz
          asset_content_type: application/x-xz
